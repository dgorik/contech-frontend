{
  "id": "6e34fa44-a4fc-4a33-904a-353fe336ea5f",
  "prevId": "90c05bf2-8986-4424-a24d-dfc5599f6fcb",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.files": {
      "name": "files",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "project_id": {
          "name": "project_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "path": {
          "name": "path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "files_project_id_project_overview_project_id_fk": {
          "name": "files_project_id_project_overview_project_id_fk",
          "tableFrom": "files",
          "tableTo": "project_overview",
          "columnsFrom": ["project_id"],
          "columnsTo": ["project_id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "select_policy": {
          "name": "select_policy",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "\n        EXISTS (\n          SELECT 1\n          FROM project_overview\n          WHERE project_overview.project_id = files.project_id\n            AND project_overview.user_id = requesting_user_id()\n        )\n      "
        },
        "insert_policy": {
          "name": "insert_policy",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "using": "",
          "withCheck": "\n        EXISTS (\n          SELECT 1\n          FROM project_overview\n          WHERE project_overview.project_id = files.project_id\n            AND project_overview.user_id = requesting_user_id()\n        )\n      "
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.project_overview": {
      "name": "project_overview",
      "schema": "",
      "columns": {
        "project_id": {
          "name": "project_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true,
          "default": "requesting_user_id()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "image_url": {
          "name": "image_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "policy_select": {
          "name": "policy_select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "requesting_user_id() = user_id"
        },
        "policy_insert": {
          "name": "policy_insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "using": "",
          "withCheck": "requesting_user_id() = user_id"
        },
        "policy_update": {
          "name": "policy_update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "requesting_user_id() = user_id"
        },
        "policy_delete": {
          "name": "policy_delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "requesting_user_id() = user_id"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
